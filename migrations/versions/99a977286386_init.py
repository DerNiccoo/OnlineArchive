"""init

Revision ID: 99a977286386
Revises: 
Create Date: 2020-08-15 08:46:23.777669

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '99a977286386'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('filter', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_account_created_at'), 'account', ['created_at'], unique=False)
    op.create_index(op.f('ix_account_username'), 'account', ['username'], unique=True)
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('label', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_permission',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('perm_id', sa.Integer(), nullable=False),
    sa.Column('assigned_by', sa.String(length=64), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['account.username'], ),
    sa.ForeignKeyConstraint(['perm_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'perm_id')
    )
    op.create_index(op.f('ix_account_permission_assigned_at'), 'account_permission', ['assigned_at'], unique=False)
    op.create_table('image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('filter', sa.Integer(), nullable=True),
    sa.Column('upload_time', sa.DateTime(), nullable=True),
    sa.Column('datatype', sa.String(length=5), nullable=True),
    sa.ForeignKeyConstraint(['username'], ['account.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_image_upload_time'), 'image', ['upload_time'], unique=False)
    op.create_table('image__text',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['image.id'], ),
    sa.ForeignKeyConstraint(['username'], ['account.username'], ),
    sa.PrimaryKeyConstraint('id', 'tag')
    )
    op.create_index(op.f('ix_image__text_created_at'), 'image__text', ['created_at'], unique=False)
    op.drop_table('images')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('images',
    sa.Column('image_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('path', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('uploader_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ts_upload', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('image_id', name='images_pkey'),
    sa.UniqueConstraint('path', name='images_path_key')
    )
    op.drop_index(op.f('ix_image__text_created_at'), table_name='image__text')
    op.drop_table('image__text')
    op.drop_index(op.f('ix_image_upload_time'), table_name='image')
    op.drop_table('image')
    op.drop_index(op.f('ix_account_permission_assigned_at'), table_name='account_permission')
    op.drop_table('account_permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_account_username'), table_name='account')
    op.drop_index(op.f('ix_account_created_at'), table_name='account')
    op.drop_table('account')
    # ### end Alembic commands ###
